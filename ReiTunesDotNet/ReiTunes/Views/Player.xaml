<Page
    x:Class="ReiTunes.Player"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:converters="using:ReiTunes.Core.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:ReiTunes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:primitives="using:Microsoft.Toolkit.Uwp.UI.Controls.Primitives"
    xmlns:winui="using:Microsoft.UI.Xaml.Controls"
    Background="{ThemeResource SolarizedBackgroundBrush}"
    KeyboardAcceleratorPlacementMode="Hidden"
    Loaded="Page_Loaded"
    Unloaded="Page_Unloaded"
    mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Styles/MediaTransportControls.xaml" />
                <ResourceDictionary Source="ms-appx:///Microsoft.UI.Xaml/DensityStyles/Compact.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--<Style x:Key="HeaderStyling" TargetType="primitives:DataGridColumnHeader">
                <Setter Property="Background" Value="Beige" />
                <Setter Property="Foreground" Value="{ThemeResource blue}" />
            </Style>-->

            <!--  https://github.com/windows-toolkit/WindowsCommunityToolkit/blob/7740ba715ace3ee249564fccf24b61d4f3512fea/Microsoft.Toolkit.Uwp.UI.Controls.DataGrid/DataGrid/DataGrid.xaml#L62  -->
            <SolidColorBrush
                x:Key="SystemControlGridLinesBaseMediumLowBrush"
                Opacity="0.4"
                Color="{StaticResource SystemBaseMediumLowColor}" />
        </ResourceDictionary>
    </Page.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="32" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <winui:ProgressBar
            Margin="0,0,0,0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            IsIndeterminate="True"
            Opacity="{x:Bind converters:VisibilityConverter.OpacityOrFromBools(ViewModel.PullEventsCommand.IsRunning, ViewModel.PushEventsCommand.IsRunning), Mode=OneWay}" />

        <StackPanel Margin="8,8,0,0" Orientation="Horizontal">
            <TextBlock
                FontFamily="Consolas"
                FontSize="12"
                Foreground="{ThemeResource SolarizedForeground}">
                <TextBlock.Inlines>
                    <Run Text="ReiTunes" />
                    <Run Text="{x:Bind MsixVersion}" />
                </TextBlock.Inlines>
            </TextBlock>
        </StackPanel>

        <StackPanel Grid.Row="2" Orientation="Vertical">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="100" />
                </Grid.ColumnDefinitions>

                <!--  TargetNullValue=ms-appx:///Assets/VectorIcon.svg  -->
                <!--  ms-appx:///Assets/VectorIcon.svg  -->
                <StackPanel Grid.Column="1" HorizontalAlignment="Stretch">

                    <TextBlock
                        x:Name="CurrentlyPlayingItemDescription"
                        Grid.Row="1"
                        Margin="0,5,0,0"
                        HorizontalAlignment="Center"
                        Style="{StaticResource BaseTextBlockStyle}" />

                    <MediaPlayerElement
                        x:Name="musicPlayer"
                        Grid.Row="2"
                        AreTransportControlsEnabled="True"
                        AutoPlay="True">
                        <MediaPlayerElement.TransportControls>
                            <MediaTransportControls
                                IsCompact="False"
                                IsCompactOverlayButtonVisible="True"
                                IsCompactOverlayEnabled="True"
                                IsFullWindowButtonVisible="False"
                                IsRepeatButtonVisible="True"
                                IsRepeatEnabled="True"
                                IsSkipBackwardButtonVisible="True"
                                IsSkipBackwardEnabled="True"
                                IsSkipForwardButtonVisible="True"
                                IsSkipForwardEnabled="True"
                                IsZoomButtonVisible="False"
                                Style="{StaticResource CustomMediaTransportControlsStyle}" />
                        </MediaPlayerElement.TransportControls>
                    </MediaPlayerElement>
                </StackPanel>
                <!--  Thumbnail defined after player so it's above the player when rotating  -->
                <Image
                    x:Name="CurrThumbnailImage"
                    Grid.Column="0"
                    Margin="5,5,0,5"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Source="{x:Bind CurrThumbnail, TargetNullValue=ms-appx:///Assets/VectorIcon.svg, Mode=OneWay}"
                    Tapped="CurrentlyPlayingThumbnail_Tapped" />

                <StackPanel
                    Grid.Column="2"
                    Margin="0,0,5,0"
                    VerticalAlignment="Top">
                    <winui:ProgressBar
                        Margin="0,0,0,0"
                        HorizontalAlignment="Stretch"
                        IsIndeterminate="True"
                        Opacity="{x:Bind converters:VisibilityConverter.OpacityOrFromBools(ViewModel.PullEventsCommand.IsRunning, ViewModel.PushEventsCommand.IsRunning), Mode=OneWay}" />

                    <Button
                        x:Name="pullButton"
                        Margin="0,5,0,7"
                        Padding="4"
                        HorizontalAlignment="Stretch"
                        Background="{StaticResource base01}"
                        Command="{x:Bind ViewModel.PullEventsCommand}"
                        FontFamily="Consolas"
                        FontSize="12"
                        Foreground="{StaticResource base3}"
                        ToolTipService.ToolTip="Ctrl+P">
                        Pull
                    </Button>

                    <Button
                        x:Name="pushButton"
                        Margin="0,5,0,7"
                        Padding="4"
                        HorizontalAlignment="Stretch"
                        Background="{StaticResource base01}"
                        Command="{x:Bind ViewModel.PushEventsCommand}"
                        FontFamily="Consolas"
                        FontSize="12"
                        Foreground="{StaticResource base3}"
                        ToolTipService.ToolTip="Ctrl+Shift+P">
                        Push
                    </Button>
                    <Button
                        Margin="0,5,0,0"
                        Padding="4"
                        HorizontalAlignment="Stretch"
                        Background="{StaticResource base01}"
                        Command="{x:Bind ViewModel.BookmarkCommand}"
                        FontFamily="Consolas"
                        FontSize="12"
                        Foreground="{StaticResource base3}">
                        Bookmark
                    </Button>
                </StackPanel>
            </Grid>
            <StackPanel
                Margin="10"
                Orientation="Vertical"
                Visibility="{x:Bind ViewModel.DownloadInProgress, Mode=OneWay}">

                <TextBlock
                    Grid.Row="3"
                    FontFamily="Consolas"
                    Text="{x:Bind ViewModel.DownloadStatus, Mode=OneWay}" />
                <winui:ProgressBar
                    Margin="0,5,0,5"
                    HorizontalAlignment="Stretch"
                    Value="{x:Bind ViewModel.DownloadPercentFinished, Mode=OneWay}" />
            </StackPanel>
            <Grid Padding="5,0,5,10">
                <TextBox
                    x:Name="FilterBox"
                    FontFamily="Consolas"
                    PlaceholderText="Search">
                    <TextBox.Resources>
                        <ResourceDictionary>
                            <!--  Without these the background is white/black  -->
                            <ResourceDictionary.ThemeDictionaries>
                                <ResourceDictionary x:Key="Light">
                                    <StaticResource x:Key="TextControlBackgroundFocused" ResourceKey="base2" />
                                </ResourceDictionary>
                                <ResourceDictionary x:Key="Dark">
                                    <StaticResource x:Key="TextControlBackgroundFocused" ResourceKey="base03" />
                                </ResourceDictionary>
                            </ResourceDictionary.ThemeDictionaries>
                        </ResourceDictionary>
                    </TextBox.Resources>
                </TextBox>
                <!--  Can't figure out how to make the icon not clash with the X delete button  -->
                <!--<TextBlock
                    x:Name="findIcon"
                    Margin="0,0,5,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    FontFamily="Segoe MDL2 Assets"
                    Opacity="0.4"
                    Text="&#xE11A;" />-->
            </Grid>
        </StackPanel>

        <controls:DataGrid
            x:Name="libraryDataGrid"
            Grid.Row="5"
            Margin="0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            AlternatingRowBackground="{ThemeResource SolarizedAlternatingRow}"
            AreRowDetailsFrozen="False"
            AreRowGroupHeadersFrozen="True"
            AutoGenerateColumns="False"
            BeginningEdit="libraryDataGrid_BeginningEdit"
            BorderBrush="{StaticResource base01}"
            BorderThickness="0,1,0,0"
            CanUserReorderColumns="True"
            CanUserResizeColumns="True"
            CanUserSortColumns="True"
            CellEditEnded="libraryDataGrid_CellEditEnded"
            ColumnHeaderHeight="32"
            DoubleTapped="OpenSelectedLibraryItem"
            FontFamily="Consolas"
            FrozenColumnCount="0"
            GridLinesVisibility="All"
            HeadersVisibility="Column"
            HorizontalGridLinesBrush="{StaticResource base0}"
            HorizontalScrollBarVisibility="Visible"
            ItemsSource="{x:Bind ViewModel.VisibleItems, Mode=OneWay}"
            MaxColumnWidth="600"
            RowDetailsVisibilityMode="Collapsed"
            RowEditEnded="libraryDataGrid_RowEditEnded"
            RowGroupHeaderPropertyNameAlternative="Range"
            SelectionMode="Extended"
            Sorting="libraryDataGrid_Sorting"
            VerticalGridLinesBrush="{StaticResource base01}">
            <controls:DataGrid.Resources>
                <ResourceDictionary>
                    <Style x:Key="ColHeaderStyle" TargetType="primitives:DataGridColumnHeader">

                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <Grid>
                                        <TextBlock
                                            FontFamily="Consolas"
                                            FontWeight="Bold"
                                            Foreground="{ThemeResource SolarizedForeground}"
                                            Text="{Binding}"
                                            TextAlignment="Center" />
                                    </Grid>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <ResourceDictionary.ThemeDictionaries>
                        <!--  Can't seem to style the header colours normally. Approach borrowed from: https://github.com/files-community/Files/blob/200fd540298fa7c7c76f0fabc50670f54bf1bd32/Files/Views/LayoutModes/GenericFileBrowser.xaml#L665  -->
                        <!--  TODO: source these from centralized colours  -->
                        <ResourceDictionary x:Key="Light">
                            <SolidColorBrush x:Key="GridLinesBrush" Color="#586e75" />
                            <Color x:Key="DataGridColumnHeaderBackgroundColor">#eee8d5</Color>
                        </ResourceDictionary>
                        <ResourceDictionary x:Key="Dark">
                            <SolidColorBrush x:Key="GridLinesBrush" Color="#586e75" />
                            <Color x:Key="DataGridColumnHeaderBackgroundColor">#002b36</Color>
                        </ResourceDictionary>
                    </ResourceDictionary.ThemeDictionaries>
                </ResourceDictionary>
            </controls:DataGrid.Resources>
            <controls:DataGrid.ColumnHeaderStyle>
                <StaticResource ResourceKey="ColHeaderStyle" />
            </controls:DataGrid.ColumnHeaderStyle>
            <controls:DataGrid.RowStyle>
                <Style TargetType="controls:DataGridRow">
                    <Setter Property="controls:DataGridRow.ContextFlyout">
                        <Setter.Value>
                            <MenuFlyout x:Name="LibraryItemFlyout" Opening="LibraryItemFlyout_Opening" />
                        </Setter.Value>
                    </Setter>
                </Style>
            </controls:DataGrid.RowStyle>
            <controls:DataGrid.Columns>
                <controls:DataGridTextColumn
                    Binding="{Binding Name}"
                    Header="Name"
                    Tag="Name" />
                <controls:DataGridTextColumn
                    Binding="{Binding Artist}"
                    Header="Artist"
                    Tag="Artist" />
                <controls:DataGridTextColumn
                    Binding="{Binding Album}"
                    Header="Album/Show"
                    Tag="Album" />
                <controls:DataGridTextColumn
                    Binding="{Binding PlayCount}"
                    Header="Plays"
                    IsReadOnly="True"
                    Tag="Plays">
                    <controls:DataGridTextColumn.CellStyle>
                        <Style TargetType="controls:DataGridCell">
                            <Style.Setters>
                                <Setter Property="HorizontalAlignment" Value="Right" />
                            </Style.Setters>
                        </Style>
                    </controls:DataGridTextColumn.CellStyle>
                </controls:DataGridTextColumn>
                <controls:DataGridTextColumn
                    Binding="{Binding CreatedTimeLocal}"
                    Header="Date Added"
                    IsReadOnly="True"
                    Tag="CreatedTimeLocal" />
                <controls:DataGridTextColumn
                    Binding="{Binding FilePath}"
                    Header="File Path"
                    Tag="Path" />
            </controls:DataGrid.Columns>
        </controls:DataGrid>
    </Grid>
</Page>